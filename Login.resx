<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>